export function _subscribe(channel, replayId, onMessageCallback) {
    return _executeAPI("subscribe", {channel, replayId, onMessageCallback});
}

export function _unsubscribe(subscription, callback) {
    return _executeAPI("unsubscribe", {subscription, callback});
}

export function _onError(callback) {
    return _executeAPI("onError", {callback});
}

export function _setDebugFlag(flag) {
    return _executeAPI("setDebugFlag", {flag});
}

export function _isEmpEnabled() {
    return _executeAPI("isEmpEnabled", {});
}

function _executeAPI(methodName, methodArgs) {
    return new Promise(((resolve, reject) => {
        const apiEvent = new CustomEvent("internalapievent", {
            bubbles: true,
            composed: true,
            cancelable: false,
            detail: {
                category: "empApi",
                methodName,
                methodArgs,
                callback: (err, response) => {
                    if (err) {
                        return reject(err);
                    }
                    return resolve(response);
                }
            }
        });
        window.dispatchEvent(apiEvent);
    }));
}