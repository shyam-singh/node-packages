/*
 * Copyright 2019 salesforce.com, inc.
 * All Rights Reserved
 * Company Confidential
 */
export default function BarcodeScannerFactory(nimbus) {
    let barcodeScanner;
    if (nimbus && nimbus.plugins.barcodeScanner) {
        barcodeScanner = nimbus.plugins.barcodeScanner;
        // TODO: When@W-7267263(https://gus.lightning.force.com/lightning/r/ADM_Work__c/a07B00000080Wk4IAE/view)
        // is done there will be a logic that should consolidate deletion of all plugins from
        // nimbus.plugins.  Then the following line can be removed.
        delete nimbus.plugins.barcodeScanner;
    }

    const BarcodeScanner = class BarcodeScannerWithCheck {
        // Following barcode types are supported by Android and iOS out of the box.
        // Create an array with types of barcode specified here as a parameter to
        // beginCapture method to restrict which types are to be scanned in a
        // capture session.
        get barcodeTypes() {
            return {
                CODE_128: 'code128',
                CODE_39: 'code39',
                CODE_93: 'code93',
                DATA_MATRIX: 'datamatrix',
                EAN_13: 'ean13',
                EAN_8: 'ean8',
                ITF: 'itf',
                UPC_E: 'upce',
                PDF_417: 'pdf417',
                QR: 'qr',
            };
        }
        isAvailable() {
            return barcodeScanner !== undefined;
        }

        beginCapture(options) {
            return new Promise((resolve, reject) => {
                barcodeScanner.beginCapture(options, (result, error) => {
                    if (error) {
                        reject(error);
                    } else {
                        resolve(result);
                    }
                });
            });
        }
        resumeCapture() {
            barcodeScanner.resumeCapture();
        }
        endCapture() {
            barcodeScanner.endCapture();
        }
    };

    function factory() {
        return new BarcodeScanner();
    }

    return factory;
}
