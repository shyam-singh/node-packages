/**
 * Interface for custom html template generators
 */
export interface Generate {
    cmp: ComponentNode;
    attributeSet: AttributeSet;
    containerRegion: string;
    isRenderDesignMode: boolean;
    isThemeLayout?: boolean;
}
export interface TemplateGenerator {
    generate({ cmp, attributeSet, containerRegion, isRenderDesignMode, isThemeLayout, }: Generate): ComponentTemplate;
    getComponentName(): string;
}
declare type Attributes = {
    html: string;
    attributes: AttributeSet;
};
declare type ComponentAttributes = {
    [key: string]: string;
};
export declare type RegionNode = {
    components: ComponentNode[];
    slotName: string;
    uuid: string;
};
export declare type ComponentNode = {
    descriptor: string;
    uuid?: string;
    attributes?: ComponentAttributes;
    regions?: RegionNode[];
};
export declare type ComponentTemplate = {
    html: string;
    attrs: Attributes;
};
export declare type AttributeSet = {
    [key: string]: ComponentAttributes;
};
export {};
//# sourceMappingURL=template-generator.d.ts.map