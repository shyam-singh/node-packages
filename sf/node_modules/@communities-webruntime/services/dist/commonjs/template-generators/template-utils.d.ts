import { AttributeSet, ComponentNode, RegionNode } from './template-generator';
interface RegionsInterface {
    regionList?: RegionNode[];
    isThemeLayout: boolean;
    attributeSet: AttributeSet;
    isRenderDesignMode: boolean;
}
declare function regions({ regionList, isThemeLayout, attributeSet, isRenderDesignMode, }: RegionsInterface): string;
declare function attributes(cmp: any, attributeSet: any): {
    html: string;
    attributes: any;
};
declare function buildSlot(slotName: any): string;
interface ComponentInterface {
    cmp: ComponentNode;
    isThemeLayout: boolean;
    regionName: string;
    attributeSet: AttributeSet;
    isTopLevel: boolean;
    isRenderDesignMode: boolean;
}
declare function component({ cmp, isThemeLayout, regionName, attributeSet, isTopLevel, isRenderDesignMode, }: ComponentInterface): {
    html: string;
    attributes: {
        html: string;
        attributes: AttributeSet;
    };
};
export { regions, component, attributes, buildSlot };
//# sourceMappingURL=template-utils.d.ts.map