/**
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
import 'colors';
interface ProxyEventListener {
    (proxyReq: any, req: any, res: any): void;
}
/**
 * The API middleware config
 */
interface ApiConfig {
    readonly recordDir: string;
    readonly apiPathPrefix: string;
    readonly apiEndpoint?: string;
    readonly apiEndpointHeaders?: string[];
    readonly recordApiCalls?: boolean;
    readonly onProxyReq?: ProxyEventListener;
    readonly pathRewrite?: any;
}
/**
 * A middleware to handle API calls.
 *
 * There's 2 modes:
 * - proxy calls to an external API endpoint and record the API calls response
 * - replay the previously recorded API calls
 *
 * Only GET calls are handled recorded and replayed.
 *
 * @public
 * @param {ApiConfig} config - The middleware config
 * @returns The Express middleware handling API calls
 */
declare function apiMiddleware(config: ApiConfig): (req: any, res: any, next: any) => any;
export { apiMiddleware };
//# sourceMappingURL=api-middleware.d.ts.map