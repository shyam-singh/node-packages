"use strict";
/** @hidden */
/**
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
const errors_1 = require("@lwc/errors");
exports.versionMessages = {
    CREATE_HASH: {
        code: 6000,
        message: 'Created version hash "{0}"',
        level: errors_1.DiagnosticLevel.Log,
        url: '',
    },
    WRITE_FILE: {
        code: 6001,
        message: 'Writing {0}...',
        level: errors_1.DiagnosticLevel.Log,
        url: '',
    },
};
exports.serverMessages = {
    INVALID_INIT: {
        code: 6002,
        message: 'The server should only be started once. Stop the Server first.',
        level: errors_1.DiagnosticLevel.Fatal,
        url: '',
    },
    ON_START: {
        code: 6003,
        message: 'Listening on {0}:{1}{2}',
        level: errors_1.DiagnosticLevel.Log,
        url: '',
    },
    ON_SHUTDOWN: {
        code: 6004,
        message: 'Server is shutdown',
        level: errors_1.DiagnosticLevel.Log,
        url: '',
    },
    FAIL_SHUTDOWN: {
        code: 6020,
        message: 'The following error occurred while shutting down the server but server shutdown will continue.\n{0}',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
};
exports.containerMessages = {
    INVALID_DATA: {
        code: 6005,
        message: 'Invalid data encountered in resource bundle for {0}, {1}',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    INVALID_RESOURCE: {
        code: 6006,
        message: 'Could not find a service to support "{0}"',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    MISSING_ADDRESSES: {
        code: 6007,
        message: 'Specifier "{0}" is mapped to no addresses',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    INVALID_MULTI_ADDRESSES: {
        code: 6008,
        message: 'Multi-address fallbacks that are not [built-in module, fetch-scheme URL] is not yet implemented',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    MISSING_PACKAGE_ADDRESSES: {
        code: 6009,
        message: 'Specifier "{0}" is mapped to no addresses via package "{1}"',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    MISSING_SERVICE: {
        code: 6010,
        message: 'Cannot instantiate {0}, it is not an addressable service',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    SERVICE_CLASH: {
        code: 6011,
        message: 'Multiple services are attempting to map the same specifier "{0}": ["{1}", "{2}"]',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    MISSING_CONTAINER_TO_BUILD: {
        code: 6012,
        message: 'Resource building requires the container to be initialized',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
};
exports.bootstrapMessages = {
    MISSING_FRAMEWORK_RESOURCE: {
        code: 6013,
        message: 'Cannot find framework resource "{0}" to bootstrap',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    UNMAPPED_SPECIFIER: {
        code: 6014,
        message: 'Expected "{0}" to be mapped',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    INVALID_STYLE_PROPS: {
        code: 6015,
        message: 'Style cannot be added because it must contain either an href or a code attribute, but not both: {0}',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    INVALID_STYLE: {
        code: 6016,
        message: 'Style cannot be added because it is neither a valid style object or inline code string',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    COMPILE_FAILED: {
        code: 6017,
        message: 'Could not build the import map resource',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    INVALID_SCRIPT_PROPS: {
        code: 6018,
        message: 'Script cannot be added because it must contain either an href or a code attribute, but not both: {0}',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
    INVALID_SCRIPT: {
        code: 6019,
        message: 'Script cannot be added because it is neither a valid script object or inline code string',
        level: errors_1.DiagnosticLevel.Error,
        url: '',
    },
};
//# sourceMappingURL=messages.js.map