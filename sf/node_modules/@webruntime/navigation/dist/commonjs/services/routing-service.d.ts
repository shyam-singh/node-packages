/**
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
import { AddressableService, CompileService, ContainerContext, RequestOutput, RequestParams, RequestService } from '@webruntime/api';
export declare class RoutingService extends AddressableService implements RequestService, CompileService {
    mappings: {
        [key: string]: any;
    };
    private projectDir;
    private uriBasePath;
    private routes;
    private views;
    constructor({ projectDir, server: { basePath, resourceRoot } }: {
        projectDir: any;
        server: {
            basePath: any;
            resourceRoot: any;
        };
    });
    /**
     * Tie into the server initialize lifecycle event to do setup.
     */
    initialize(): Promise<void>;
    /**
     * Read in the route data and set up data structures for Route Definitions and Views.
     */
    initializeData(): void;
    /**
     * Implement a RequestService, which allows Route data to be loaded via HTTP.
     */
    request(specifier: string, pivots: RequestParams, { compilerConfig }: ContainerContext): Promise<RequestOutput>;
    /**
     * Implement a CompileService, which allows Route data to be inlined into requesting modules.
     */
    getPlugin(): {
        name: string;
        resolveId(filePath: string): string | null;
        load(filePath: string): any;
    };
    /**
     * Translate a URL path into a module specifier.
     *
     * @param url
     * @example "/navigation/view/latest/dev/en_US/my/home" => "webruntimeView/my.home"
     */
    toSpecifier(url: string): string;
    /**
     * Compile a View for the given specifer.
     *
     * @param specifier
     * @param compilerConfig
     */
    compileView(specifier: string, compilerConfig: object): Promise<RequestOutput>;
    /**
     * Tie into the server shutdown lifecycle event to perform cleanup.
     * Close watchers that were started in initialize().
     */
    shutdown(): void;
}
//# sourceMappingURL=routing-service.d.ts.map