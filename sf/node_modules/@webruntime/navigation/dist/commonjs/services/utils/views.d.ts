/**
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
import { RouteSet } from './routes';
export declare type View = string;
export declare type ViewMap = {
    [key: string]: View;
};
export declare const VIEW_PREFIX: string;
export declare const VIEW_NAMESPACE: string;
/**
 * From the Route Definitions, create a map of all [route.id]:route.component pairs.
 * Only process Route Definitions with components.
 * @example: NOTE the route IDs are prefixed with their Route Set ID, for uniqueness
 *  {
    'routes.home': 'foundation/home',
    'routes.products': 'foundation/products',
    'routes.recipes': 'foundation/recipes',
    'routes.recipe': 'foundation/recipesItem',
    'routes.contact': 'foundation/contact'
 * }
 *
 * @param routes
 */
export declare function getViews(routes: RouteSet): ViewMap;
/**
 * Generate the html template and javascript file for the lwc.
 * These get passed into the compiler as "virtual" files.
 *
 * @param id - ID of the View/Route Definition
 * @param path - The parameterized path for the Route Definition
 * @param specifier - Component to wrap in the View component
 */
export declare function generateViewFiles(id: string, path: string, specifier: View): {
    [key: string]: string;
};
//# sourceMappingURL=views.d.ts.map