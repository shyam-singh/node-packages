import { ImportMapObject } from '../options';
import { UriServiceDefinition } from '../service-definition';
/**
 * The Base Addressable Service API Class
 *
 * Create a class extended from the AddressableService base class and implementing one of the available Service interfaces.
 * ```
 * import { AddressableService } from "@webruntime/api";
 * export class MyService extends AddressableService {
 * }
 * ```
 */
export declare abstract class AddressableService implements UriServiceDefinition {
    private _uri;
    /**
     * Mapping of import statements specifiers to the file or URI to be imported.
     * Adhears to the [import-maps spec](https://github.com/WICG/import-maps)
     *
     * Mappings with a trailing spach are top level specifiers, when used as
     * a prefix, the value is used as a format string.
     * ``` this.mappings = {
     *   "ns/": "/ns/:someKey/:someOtherKey/"
     * }
     *```
     */
    abstract mappings: ImportMapObject<string>;
    /**
     * Transforms URI's to the import statement specifier.
     * For example the URI
     * /somepath/get/me/label/:myLabel
     * could be converted to '@scope/labels/myLabel'.
     * Which would then be resolved by the compiler as
     *
     * import label from '@scope/labels/myLabel';
     *
     */
    abstract toSpecifier(url: string): string;
    abstract initialize(): Promise<void> | void;
    constructor(uri: string | string[]);
    get uri(): string | string[];
    parseUrl(url: string): any;
    shutdown(): void;
}
//# sourceMappingURL=addressable-service.d.ts.map