{
  "manifest": {
    "name": "async-listener",
    "version": "0.6.10",
    "description": "Polyfill exporting trevnorris's 0.11+ asyncListener API.",
    "author": {
      "name": "Forrest L Norvell",
      "email": "ogd@aoaioxxysz.net"
    },
    "contributors": [
      {
        "name": "Tim Caswell",
        "email": "tim@creationix.com"
      },
      {
        "name": "Forrest L Norvell",
        "email": "ogd@aoaioxxysz.net"
      }
    ],
    "main": "index.js",
    "scripts": {
      "test": "tap test/*.tap.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/othiym23/async-listener.git"
    },
    "keywords": [
      "polyfill",
      "shim",
      "zesty",
      "crazed",
      "experimental"
    ],
    "license": "BSD-2-Clause",
    "bugs": {
      "url": "https://github.com/othiym23/async-listener/issues"
    },
    "engines": {
      "node": "<=0.11.8 || >0.11.10"
    },
    "dependencies": {
      "semver": "^5.3.0",
      "shimmer": "^1.1.0"
    },
    "devDependencies": {
      "tap": "^0.7.1"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\csmku\\AppData\\Local\\sf\\yarn\\v6\\npm-async-listener-0.6.10-a7c97abe570ba602d782273c0de60a51e3e17cbc-integrity\\node_modules\\async-listener\\package.json",
    "readmeFilename": "README.md",
    "readme": "[![NPM](https://nodei.co/npm/async-listener.png?downloads=true&stars=true)](https://nodei.co/npm/async-listener/)\n\n[![Build status](https://travis-ci.org/othiym23/async-listener.svg?branch=master)](https://travis-ci.org/othiym23/async-listener)\n\n# process.addAsyncListener polyfill\n\nThis is an implementation of Trevor Norris's\nprocess.{addAsyncListener,removeAsyncListener} API for adding behavior to async\ncalls. You can see his implementation (currently a work in progress) on\n[Node.js core pull request #6011](https://github.com/joyent/node/pull/6011).\nThis polyfill / shim is intended for use in versions of Node prior to whatever\nversion of Node in which Trevor's changes finally land (anticipated at the time\nof this writing as 0.11.7).\n\nHere's his documentation of the intended API, which will probably get cleaned up\nhere later:\n\n## createAsyncListener(callbacks[, initialStorage])\n\n* `callbacks` {Object}\n* `initialStorage` {Value}\n\nReturns a constructed `AsyncListener` object. Which can then be passed to\n`process.addAsyncListener()` and `process.removeAsyncListener()`. Each\nfunction parameter is as follows:\n\n1. `callbacks`: An `Object` which may contain four optional fields:\n   * `create`: A `function (storage)` that is called when an asynchronous event\n     is queued. Recives the `storage` attached to the listener. `storage` can be\n     created by passing an `initialStorage` argument during construction, or by\n     returning a `Value` from `create` which will be attached to the listener\n     and overwrite the `initialStorage`.\n   * `before`: A `function (context, storage)` that is called immediately\n     before the asynchronous callback is about to run. It will be passed both\n     the `context` (i.e. `this`) of the calling function and the `storage`.\n   * `after`: A `function (context, storage)` called immediately after the\n     asynchronous event's callback is run. Note that if the event's callback\n     throws during execution this will not be called.\n   * `error`: A `function (storage, error)` called if the event's callback\n     threw. If `error` returns `true` then Node will assume the error has been\n     properly handled and resume execution normally.\n1. `initialStorage`: A `Value` (i.e. anything) that will be, by default,\n   attached to all new event instances. This will be overwritten if a `Value`\n   is returned by `create()`.\n\n\n## addAsyncListener(callbacks[, initialStorage])\n## addAsyncListener(asyncListener)\n\nReturns a constructed `AsyncListener` object and immediately adds it to the\nlistening queue.\n\n## removeAsyncListener(asyncListener)\n\nRemoves the `asyncListener` from the listening queue.\n",
    "licenseText": "BSD 2-Clause License\n\nCopyright (c) 2013-2017, Forrest L Norvell\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/async-listener/-/async-listener-0.6.10.tgz#a7c97abe570ba602d782273c0de60a51e3e17cbc",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/async-listener/-/async-listener-0.6.10.tgz",
    "hash": "a7c97abe570ba602d782273c0de60a51e3e17cbc",
    "integrity": "sha512-gpuo6xOyF4D5DE5WvyqZdPA3NGhiT6Qf07l7DCB0wwDEsLvDIbCr6j9S5aj5Ch96dLace5tXVzWBZkxU/c5ohw==",
    "registry": "npm",
    "packageName": "async-listener",
    "cacheIntegrity": "sha512-gpuo6xOyF4D5DE5WvyqZdPA3NGhiT6Qf07l7DCB0wwDEsLvDIbCr6j9S5aj5Ch96dLace5tXVzWBZkxU/c5ohw== sha1-p8l6vlcLpgLXgic8DeYKUePhfLw="
  },
  "registry": "npm",
  "hash": "a7c97abe570ba602d782273c0de60a51e3e17cbc"
}