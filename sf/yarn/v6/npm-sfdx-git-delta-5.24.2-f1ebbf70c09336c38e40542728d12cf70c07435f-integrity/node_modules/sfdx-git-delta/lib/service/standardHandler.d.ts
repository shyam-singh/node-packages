/// <reference types="node" />
export = StandardHandler;
declare class StandardHandler {
    constructor(line: any, type: any, work: any, metadata: any);
    metadata: any;
    line: any;
    type: any;
    work: any;
    diffs: any;
    config: any;
    warnings: any;
    splittedLine: any;
    suffixRegex: RegExp;
    handlerMap: {
        A: () => Promise<void>;
        D: () => void;
        M: () => Promise<void>;
    };
    ext: string;
    handle(): Promise<void>;
    handleAddition(): Promise<void>;
    handleDeletion(): void;
    handleModification(): Promise<void>;
    _getParsedPath(): import("path").ParsedPath;
    _getElementName(): string;
    _fillPackage(store: any): void;
    _copyWithMetaFile(src: any): Promise<void>;
    _getMetaTypeFilePath(path: any): string;
    _parseLine(): any;
    _getRelativeMetadataXmlFileName(path: any): string;
    _isProcessable(): boolean;
    _delegateFileCopy(): boolean;
}
