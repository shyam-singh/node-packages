/**
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

import { invariant, messages } from 'webruntime_navigation/utils';
import { generateUrl, navigate } from 'webruntime_navigation/navigation';
import { getNavigationContextId } from 'webruntime_navigation/navigationContext';

/*
 * Exports the NavigationMixin and CurrentPageReference wire adapter.
 * Uses the navContextService to retrieve the current navigation context/node.
 */

/**
 * Provides navigate() and generateUrl() functionality.
 * Here, navigate() can take either a route OR a string URL.
 * Functionality pulled in from the current navigation context.
 * Used by components as a Mixin to extend their own functionality.
 *
 * @param {HTMLElement} Base - A class instance
 */
const Navigate = Symbol('Navigate');
const GenerateUrl = Symbol('GenerateUrl');
const NavigationMixin = Base => {
    invariant(typeof Base.prototype.dispatchEvent === 'function', messages.INVALID_MIXIN_CMP, [
        Base,
    ]);
    return class extends Base {
        [Navigate](/*object|string*/ pageRef, options) {
            navigate(getNavigationContextId(this), pageRef, options);
        }
        [GenerateUrl](/*object*/ pageRef) {
            return generateUrl(getNavigationContextId(this), pageRef);
        }
    };
};
NavigationMixin.Navigate = Navigate;
NavigationMixin.GenerateUrl = GenerateUrl;

export { NavigationMixin };
