{
  "manifest": {
    "name": "propagate",
    "description": "Propagate events from one event emitter into another",
    "keywords": [
      "event",
      "events",
      "emitter",
      "eventemitter",
      "propagation"
    ],
    "version": "2.0.1",
    "author": {
      "name": "Pedro Teixeira",
      "email": "pedro.teixeira@gmail.com"
    },
    "contributors": [
      {
        "name": "Pedro Teixeira"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/nock/propagate.git"
    },
    "homepage": "http://github.com/nock/propagate#readme",
    "bugs": {
      "url": "http://github.com/nock/propagate/issues"
    },
    "engines": {
      "node": ">= 8"
    },
    "dependencies": {},
    "devDependencies": {
      "eslint": "^5.16.0",
      "eslint-config-prettier": "^4.1.0",
      "eslint-config-standard": "^12.0.0",
      "eslint-plugin-import": "^2.16.0",
      "eslint-plugin-node": "^8.0.1",
      "eslint-plugin-promise": "^4.1.1",
      "eslint-plugin-standard": "^4.0.0",
      "prettier": "^1.16.4",
      "semantic-release": "16.0.0-beta.18",
      "tap": "^12.6.1"
    },
    "scripts": {
      "lint": "eslint \"**/*.js\"",
      "unit": "tap tests/index.js",
      "coverage": "tap --coverage-report=html && open coverage/lcov-report/index.html",
      "prettier": "prettier --write \"**/*.@(js|md|yml|json)\"",
      "prettier:check": "prettier --check \"**/*.@(js|md|yml|json)\"",
      "pretest": "npm run lint",
      "test": "npm run -s unit",
      "posttest": "npm run -s prettier:check"
    },
    "nyc": {
      "exclude": [
        "tests/"
      ]
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "C:\\Users\\csmku\\AppData\\Local\\sf\\yarn\\v6\\npm-propagate-2.0.1-40cdedab18085c792334e64f0ac17256d38f9a45-integrity\\node_modules\\propagate\\package.json",
    "readmeFilename": "README.md",
    "readme": "# propagate\n\n[![npm](https://img.shields.io/npm/v/nock.svg?style=flat-square)][npmjs]\n[![Build Status](https://img.shields.io/travis/nock/propagate/master.svg?style=flat-square)][build]\n[![Coverage](https://img.shields.io/coveralls/github/nock/propagate.svg?style=flat-square)][coverage]\n\n[npmjs]: https://www.npmjs.com/package/propagate\n[build]: https://travis-ci.org/nock/propagate\n[coverage]: https://coveralls.io/github/nock/propagate\n\nPropagate events from one event emitter into another.\n\n## Install\n\n```bash\n$ npm install propagate\n```\n\n## Propagate\n\n```javascript\nvar ee1 = new EventEmitter()\nvar ee2 = new EventEmitter()\npropagate(ee1, ee2)\n\nee2.on('event', function(a, b) {\n  console.log('got propagated event', a, b)\n})\n\nee1.emit('event', 'a', 'b')\n```\n\n## Unpropagate\n\nYou can unpropagate by ending the propagation like this:\n\n```javascript\nvar ee1 = new EventEmitter()\nvar ee2 = new EventEmitter()\nvar p = propagate(ee1, ee2)\n\n// ...\n\np.end()\n```\n\n## Only propagate certain events:\n\n```javascript\nvar ee1 = new EventEmitter()\nvar ee2 = new EventEmitter()\nvar p = propagate(['event1', 'event2'], ee1, ee2)\n```\n\n## Propagate certain events as other events:\n\n```javascript\nvar ee1 = new EventEmitter()\nvar ee2 = new EventEmitter()\nvar p = propagate(\n  {\n    event1: 'other-event1',\n    event2: 'other-event2',\n  },\n  ee1,\n  ee2\n)\n```\n\n# License\n\nMIT\n",
    "licenseText": "The MIT License\n\nCopyright (c) 2015-2019 Pedro Teixeira and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/propagate/-/propagate-2.0.1.tgz#40cdedab18085c792334e64f0ac17256d38f9a45",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/propagate/-/propagate-2.0.1.tgz",
    "hash": "40cdedab18085c792334e64f0ac17256d38f9a45",
    "integrity": "sha512-vGrhOavPSTz4QVNuBNdcNXePNdNMaO1xj9yBeH1ScQPjk/rhg9sSlCXPhMkFuaNNW/syTvYqsnbIJxMBfRbbag==",
    "registry": "npm",
    "packageName": "propagate",
    "cacheIntegrity": "sha512-vGrhOavPSTz4QVNuBNdcNXePNdNMaO1xj9yBeH1ScQPjk/rhg9sSlCXPhMkFuaNNW/syTvYqsnbIJxMBfRbbag== sha1-QM3tqxgIXHkjNOZPCsFyVtOPmkU="
  },
  "registry": "npm",
  "hash": "40cdedab18085c792334e64f0ac17256d38f9a45"
}