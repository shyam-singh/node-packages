{
  "manifest": {
    "name": "hsts",
    "author": {
      "name": "Adam Baldwin",
      "email": "adam@npmjs.com",
      "url": "https://evilpacket.net"
    },
    "contributors": [
      {
        "name": "Evan Hahn",
        "email": "me@evanhahn.com",
        "url": "https://evanhahn.com"
      }
    ],
    "description": "HTTP Strict Transport Security middleware.",
    "version": "2.2.0",
    "license": "MIT",
    "keywords": [
      "helmet",
      "security",
      "express",
      "connect",
      "hsts",
      "https"
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/helmetjs/hsts.git"
    },
    "homepage": "https://helmetjs.github.io/docs/hsts/",
    "bugs": {
      "url": "https://github.com/helmetjs/hsts/issues",
      "email": "me@evanhahn.com"
    },
    "engines": {
      "node": ">=4.0.0"
    },
    "scripts": {
      "pretest": "standard --fix",
      "test": "mocha"
    },
    "devDependencies": {
      "connect": "^3.6.6",
      "mocha": "^6.0.2",
      "standard": "^12.0.1",
      "supertest": "^4.0.0"
    },
    "standard": {
      "globals": [
        "describe",
        "beforeEach",
        "it"
      ]
    },
    "dependencies": {
      "depd": "2.0.0"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\csmku\\AppData\\Local\\sf\\yarn\\v6\\npm-hsts-2.2.0-09119d42f7a8587035d027dda4522366fe75d964-integrity\\node_modules\\hsts\\package.json",
    "readmeFilename": "README.md",
    "readme": "HTTP Strict Transport Security middleware\n========================================\n[![Build Status](https://travis-ci.org/helmetjs/hsts.svg?branch=master)](https://travis-ci.org/helmetjs/hsts)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\nThis middleware adds the `Strict-Transport-Security` header to the response. This tells browsers, \"hey, only use HTTPS for the next period of time\". ([See the spec](http://tools.ietf.org/html/rfc6797) for more.) Note that the header won't tell users on HTTP to *switch* to HTTPS, it will just tell HTTPS users to stick around. You can enforce HTTPS with the [express-enforces-ssl](https://github.com/aredo/express-enforces-ssl) module.\n\nThis will set the Strict Transport Security header, telling browsers to visit by HTTPS for the next 180 days:\n\n```javascript\nconst hsts = require('hsts')\n\napp.use(hsts({\n  maxAge: 15552000  // 180 days in seconds\n}))\n// Strict-Transport-Security: max-age: 15552000; includeSubDomains\n```\n\nNote that the max age must be in seconds. *This was different in previous versions of this module!*\n\nThe `includeSubDomains` directive is present by default. If this header is set on *example.com*, supported browsers will also use HTTPS on *my-subdomain.example.com*. You can disable this:\n\n```javascript\napp.use(hsts({\n  maxAge: 15552000,\n  includeSubDomains: false\n}))\n```\n\nSome browsers let you submit your site's HSTS to be baked into the browser. You can add `preload` to the header with the following code. You can check your eligibility and submit your site at [hstspreload.org](https://hstspreload.org/).\n\n```javascript\napp.use(hsts({\n  maxAge: 31536000,        // Must be at least 1 year to be approved\n  includeSubDomains: true, // Must be enabled to be approved\n  preload: true\n}))\n```\n\nThis header will always be set because [the header is ignored in insecure HTTP](https://tools.ietf.org/html/rfc6797#section-8.1). You may wish to set it conditionally:\n\n```javascript\nconst hstsMiddleware = hsts({\n  maxAge: 1234000\n})\n\napp.use((req, res, next) => {\n  if (req.secure) {\n    hstsMiddleware(req, res, next)\n  } else {\n    next()\n  }\n})\n```\n\nThis header is [somewhat well-supported by browsers](https://caniuse.com/#feat=stricttransportsecurity).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014-2019 Evan Hahn, Adam Baldwin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hsts/-/hsts-2.2.0.tgz#09119d42f7a8587035d027dda4522366fe75d964",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hsts/-/hsts-2.2.0.tgz",
    "hash": "09119d42f7a8587035d027dda4522366fe75d964",
    "integrity": "sha512-ToaTnQ2TbJkochoVcdXYm4HOCliNozlviNsg+X2XQLQvZNI/kCHR9rZxVYpJB3UPcHz80PgxRyWQ7PdU1r+VBQ==",
    "registry": "npm",
    "packageName": "hsts",
    "cacheIntegrity": "sha512-ToaTnQ2TbJkochoVcdXYm4HOCliNozlviNsg+X2XQLQvZNI/kCHR9rZxVYpJB3UPcHz80PgxRyWQ7PdU1r+VBQ== sha1-CRGdQveoWHA10CfdpFIjZv512WQ="
  },
  "registry": "npm",
  "hash": "09119d42f7a8587035d027dda4522366fe75d964"
}