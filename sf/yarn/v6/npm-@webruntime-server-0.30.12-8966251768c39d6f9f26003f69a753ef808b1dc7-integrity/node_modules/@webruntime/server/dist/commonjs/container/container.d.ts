/**
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
import { AdditionalProperties, BootstrapResourceList, Config, Metadata, PageDefinition, PublicConfig, RequestParams, ServiceDefinition, WebruntimeAppDefinition, WebruntimePage } from '@webruntime/api';
import express from 'express';
import { ResourceBundle } from './resource-bundle';
interface PageBootstrapWrapper {
    page: WebruntimePage;
    resources: BootstrapResourceList;
}
/**
 * A container of services providing application resources.
 */
export declare class Container {
    private _config;
    private _additionalProperties?;
    private _services;
    private serviceMap;
    private _isInitialized;
    constructor(config: Config, additionalProperties?: AdditionalProperties);
    initialize(pregenerate?: boolean): Promise<void>;
    private initializeService;
    build(specifier: string, params?: RequestParams): Promise<ResourceBundle>;
    renderPage(req: express.Request, pageDef: PageDefinition, pageApp: WebruntimeAppDefinition, locals?: object): Promise<PageBootstrapWrapper>;
    find(specifier: string): ServiceDefinition | void;
    isAppExternal(specifier: any): boolean;
    isUsingExperimentalModules(): boolean;
    get metadata(): Metadata;
    get publicConfig(): PublicConfig;
    get services(): readonly ServiceDefinition[];
    shutdown(): Promise<void>;
}
export {};
//# sourceMappingURL=container.d.ts.map