/** @hidden */
/**
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
import { CLIEngine } from 'eslint';
import { DynamicImport, InlineConfig, NormalizedRuntimeCompilerOptions, RuntimeCompilerOptions } from './interfaces';
/**
 * Extend the LWC CompilerConfig validation to have files be optional.
 *
 * @param options - Configuration passed into the Compiler
 */
export declare function validateOptions(options: RuntimeCompilerOptions): NormalizedRuntimeCompilerOptions;
/**
 * Return an external function Rollup, based on the current module ID and Compiler config.
 *
 * @param moduleId - The ID of the module being built (eg: 'x/foo')
 * @param inlineConfig - Inline config array passed into the Compiler
 * @param external - External array passed into the Compiler
 *
 * @returns - A function which returns true or false if a given ID should be an external dependency
 */
export declare function createExternals(moduleId?: string, inlineConfig?: (string | InlineConfig)[], external?: Function | string[]): Function;
/**
 * Turn the array of strings into an array of DynamicImport objects.
 * @example
 *          'x/footer?pivots=route:about,route:home' =>
 *          { specifier: 'x/foo', pivots: ['route:about','locale:es'] }
 *
 * @param specifier - A module specifier to parse for a pivots query parameter
 */
export declare function parsePivots(specifier?: string): DynamicImport;
export declare const lintConfig: CLIEngine.Options;
//# sourceMappingURL=utils.d.ts.map