/**
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */

/*
 * This file is rolled up separately from the framework
 * and only included in compat modes.
 *
 * It contains the @babel/runtime modules and expose them globally.
 *
 * It also exposes the proxy-compat helpers.
 */

// the @babel/runtime modules are provided by es5-proxy-compat
import { babelHelpers, regenerator } from 'es5-proxy-compat/module';

function getDeepKeys(obj) {
    let keys = [];
    for (const key in obj) {
        if (typeof obj[key] === 'object') {
            const subkeys = getDeepKeys(obj[key]);
            keys = keys.concat(
                subkeys.map(subkey => {
                    return {
                        path: `${key}/${subkey.path}`,
                        module: subkey.module,
                    };
                })
            );
        } else {
            keys.push({ path: key, module: obj[key] });
        }
    }
    return keys;
}

const compatModules = {};
const PROXY_PREFIX = 'proxy-compat/';
Object.keys(window.Proxy).forEach(helper => {
    compatModules[PROXY_PREFIX + helper] = window.Proxy[helper];
});

const RUNTIME_HELPERS_PREFIX = '@babel/runtime/helpers/';
const babelModules = getDeepKeys(babelHelpers);
babelModules.forEach(m => {
    compatModules[RUNTIME_HELPERS_PREFIX + m.path] = m.module;
});

const RUNTIME_REGENERATOR_PREFIX = '@babel/runtime/regenerator';
compatModules[RUNTIME_REGENERATOR_PREFIX] = regenerator;

const babelRuntime = {
    helpers: babelHelpers,
    regenerator,
};

export { babelRuntime as babel, compatModules as modules };
