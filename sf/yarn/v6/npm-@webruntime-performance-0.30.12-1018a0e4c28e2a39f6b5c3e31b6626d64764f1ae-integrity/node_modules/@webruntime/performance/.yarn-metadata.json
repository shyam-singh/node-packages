{
  "manifest": {
    "name": "@webruntime/performance",
    "version": "0.30.12",
    "description": "Lightning Web Runtime - Utilities",
    "keywords": [],
    "license": "MIT",
    "main": "dist/commonjs/index.js",
    "types": "src/index.ts",
    "files": [
      "dist/",
      "src/"
    ],
    "scripts": {
      "build": "tsc -b",
      "clean": "rm -rf dist tsconfig.tsbuildinfo",
      "coverage": "jest --coverage --silent --maxWorkers=2",
      "doc": "typedoc",
      "test": "jest"
    },
    "publishConfig": {
      "access": "public",
      "registry": "https://registry.npmjs.org"
    },
    "devDependencies": {
      "@types/jest": "~23.0.0",
      "babel-jest": "^24.1.0",
      "ts-jest": "^24.0.2",
      "typedoc": "^0.15.0",
      "typedoc-plugin-internal-external": "^2.0.2",
      "typedoc-plugin-markdown": "^2.2.4",
      "typedoc-plugin-no-inherit": "^1.1.10"
    },
    "gitHead": "f91998cb535573b8cf07f2a0ce7595c10ff466c1",
    "_registry": "npm",
    "_loc": "C:\\Users\\csmku\\AppData\\Local\\sf\\yarn\\v6\\npm-@webruntime-performance-0.30.12-1018a0e4c28e2a39f6b5c3e31b6626d64764f1ae-integrity\\node_modules\\@webruntime\\performance\\package.json",
    "readmeFilename": "README.md",
    "readme": "# Lightning Web Runtime :: Performance\n\nThis package contains a utility for recording runtime performance.\n\n## Getting Started\n\nInstall:\n\n```\nnpm install @webruntime/performance\n```\n\n## Usage\n\n### Measuring\n\nThis package provides two functions for manually starting and ending performance time measurements and a typescript decorator for automatically recording the runtime of decorated class methods.\n\n```javascript\nconst { endMeasure, startMeasure } = require('@webruntime/performance');\n\nfunction fib(n) {\n    startMeasure(`fib-${n}`);\n    let res = n === 1 || n === 2 ? 1 : fib(n - 1) + fib(n - 2);\n    endMeasure(`fib-${n}`);\n    return res;\n}\n```\n\n```typescript\nimport { Measure } from '@webruntime/performance';\n\nclass FibonacciCalculator {\n    ...\n\n    @Measure(n => `fib-${n}`)\n    calculate (n: number) {\n        return n === 1 || n === 2 ? 1 : fib(n-1) + fib(n-2);\n    }\n}\n```\n\n### Collecting Measurements\n\nThis package does not currently log the timing measurements being recorded by the utility due to LWR not yet having a configurable logger. For now, users can use a [PerformanceObserver](https://nodejs.org/api/perf_hooks.html#perf_hooks_class_performanceobserver).\n\n```javascript\nconst { PerformanceObserver } = require('perf_hooks');\n\nconst observer = new PerformanceObserver(observe);\nobserver.observe({\n    entryTypes: ['measure'],\n    buffered: false,\n});\n\nfunction observe(list) {\n    const entries = list.getEntries();\n\n    entries.forEach(entry => {\n        console.log(entry);\n    });\n}\n```\n",
    "licenseText": "MIT LICENSE\n\nCopyright (c) 2019, Salesforce.com, Inc.\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@webruntime/performance/-/performance-0.30.12.tgz#1018a0e4c28e2a39f6b5c3e31b6626d64764f1ae",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@webruntime/performance/-/performance-0.30.12.tgz",
    "hash": "1018a0e4c28e2a39f6b5c3e31b6626d64764f1ae",
    "integrity": "sha512-y4icvwEA90dCZhHFMsPqA0UuvuhEsHCfkHEv+sI4JQKhDXGNU1AvsZCdwW2PxjdqEuU4lyU4vnpWUAENoLeP9g==",
    "registry": "npm",
    "packageName": "@webruntime/performance",
    "cacheIntegrity": "sha512-y4icvwEA90dCZhHFMsPqA0UuvuhEsHCfkHEv+sI4JQKhDXGNU1AvsZCdwW2PxjdqEuU4lyU4vnpWUAENoLeP9g== sha1-EBig5MKOKjn2tcPjG2Ym1kdk8a4="
  },
  "registry": "npm",
  "hash": "1018a0e4c28e2a39f6b5c3e31b6626d64764f1ae"
}