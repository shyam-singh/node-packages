{
  "manifest": {
    "name": "@lwc/template-compiler",
    "version": "1.2.2",
    "description": "Template compiler package",
    "main": "dist/commonjs/index.js",
    "typings": "dist/types/index.d.ts",
    "license": "MIT",
    "scripts": {
      "clean": "rm -rf dist/",
      "build": "tsc",
      "test": "jest"
    },
    "devDependencies": {
      "@types/he": "^1.1.0"
    },
    "files": [
      "dist/"
    ],
    "dependencies": {
      "@babel/generator": "~7.1.5",
      "@babel/parser": "~7.1.5",
      "@babel/template": "~7.1.2",
      "@babel/traverse": "~7.1.5",
      "@babel/types": "~7.1.5",
      "@lwc/errors": "1.2.2",
      "@lwc/shared": "1.2.2",
      "esutils": "^2.0.2",
      "he": "^1.1.1",
      "parse5-with-errors": "4.0.3-beta1"
    },
    "publishConfig": {
      "access": "public"
    },
    "gitHead": "ed43a4a1f80f910bf219019e642c313f80f48f70",
    "_registry": "npm",
    "_loc": "C:\\Users\\csmku\\AppData\\Local\\sf\\yarn\\v6\\npm-@lwc-template-compiler-1.2.2-e6add68806a6e628ee2bf8e94524ba28620bdee5-integrity\\node_modules\\@lwc\\template-compiler\\package.json",
    "readmeFilename": "README.md",
    "readme": "# @lwc/template-compiler\n\nCompile LWC HTML template for consumption at runtime.\n\n## Installation\n\n```sh\nyarn add --dev @lwc/template-compiler\n```\n\n## Usage\n\n```js\nimport compile from '@lwc/template-compiler';\n\nconst { code, warnings } = compile(`\n    <template>\n        <h1>Hello World!</h1>\n    </template>\n`);\n\nfor (let warning of warnings) {\n    console.log(warning.message);\n}\n\nconsole.log(code);\n```\n\n## APIs\n\n### `compile`\n\nCompile a LWC template to javascript source code consumable by the engine.\n\n```js\nimport compile from '@lwc/template-compiler';\nconst { code, warnings } = compile(`<template><h1>Hello World!</h1></template>`);\n```\n\n**Parameters:**\n\n-   `source` (string, required) - the HTML template source to compile.\n\n**Return:**\nThe method returns an object with the following fields:\n\n-   `code` (string) - the compiled template.\n-   `warnings` (array) - the list of warnings produced when compiling the template. Each warning has the following fields:\n    -   message (string) - the warning message.\n    -   level (string) - the severity of the warning: `info`, `warning`, `error`.\n    -   start (number) - the start index in the source code producing the warning.\n    -   length (number) - the character length in the source code producing the warning.\n\n### `compileToFunction`\n\nCompile a LWC template to a javascript function. This method is mainly used for testing purposes.\n\n```js\nimport { LightningElement } from 'lwc';\nimport { compileToFunction } from '@lwc/template-compiler';\n\nconst html = compileToFunction(`<template><h1>Hello World!</h1></template>`);\n\nclass Component extends LightningElement {\n    render() {\n        return html;\n    }\n}\n```\n\n**Parameters:**\n\n-   `source` (string, required) - the HTML template source to compile.\n\n**Return:**\nThe method returns an evaluated function that can be used directly in a component `render` method.\n",
    "licenseText": "MIT LICENSE\n\nCopyright (c) 2018, Salesforce.com, Inc.\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@lwc/template-compiler/-/template-compiler-1.2.2.tgz#e6add68806a6e628ee2bf8e94524ba28620bdee5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@lwc/template-compiler/-/template-compiler-1.2.2.tgz",
    "hash": "e6add68806a6e628ee2bf8e94524ba28620bdee5",
    "integrity": "sha512-nSf/Rm+xNubhO5AmOBriGd8uT/CtXnX+Oa2hvJszrq/VDn8u7QDYRbfnHmEkjhPRuwEn/SjmqHX5BeNDaPlujQ==",
    "registry": "npm",
    "packageName": "@lwc/template-compiler",
    "cacheIntegrity": "sha512-nSf/Rm+xNubhO5AmOBriGd8uT/CtXnX+Oa2hvJszrq/VDn8u7QDYRbfnHmEkjhPRuwEn/SjmqHX5BeNDaPlujQ== sha1-5q3WiAam5ijuK/jpRSS6KGIL3uU="
  },
  "registry": "npm",
  "hash": "e6add68806a6e628ee2bf8e94524ba28620bdee5"
}